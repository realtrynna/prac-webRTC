generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["interactiveTransactions"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id              Int         @id @default(autoincrement())
    email           String      @unique @db.VarChar(100)
    nickname        String      @db.VarChar(20)
    password        String      @db.VarChar(255)
    createdAt       DateTime    @default(now()) @map("created_at")
    deletedAt       DateTime?   @map("deleted_at")

    room            Room?
    memos           Memo[]
    chats           Chat[]

    @@map("users")
}

model Memo {
    id              Int         @id @default(autoincrement())
    content         String      @db.VarChar(255)
    imageUrl        String?     @db.VarChar(255) @map("image_url")
    createdAt       DateTime    @default(now()) @map("created_at")

    user            User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId          Int         

    @@map("memos")
} 

model Room {
    id              Int         @id @default(autoincrement())
    title           String      @db.VarChar(255)
    password        String?     @db.VarChar(255)
    max             Int         @default(10)
    createdAt       DateTime    @default(now()) @map("created_at")
    deletedAt       DateTime?   @map("deleted_at")

    user            User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
    userId          Int         @unique

    chats           Chat[]

    @@map("rooms")
}

model Chat {
    id              Int         @id @default(autoincrement())
    content         String      @db.VarChar(255)
    imageUrl        String?     @db.VarChar(255) @map("image_url")
    createdAt       DateTime    @default(now()) @map("created_at")
    deletedAt       DateTime?   @map("deleted_at")

    user            User        @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    userId          Int

    room            Room        @relation(fields: [roomId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    roomId          Int

    @@map("chats")
}